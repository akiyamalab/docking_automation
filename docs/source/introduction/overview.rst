========
システム概要
========

docking_automationについて
--------------------

docking_automationは、タンパク質-化合物ドッキング計算を効率的に自動化するためのフレームワークです。ドメイン駆動設計（DDD）の原則に基づき、明確なドメインモデルと責務の分離を実現しています。

このシステムの主な目的は、以下の課題を解決することです：

1. **多様なドッキングツールの統合**
2. **大規模データセットの効率的な処理**
3. **計算リソースの最適活用**
4. **結果の一貫した管理と解析**

ドッキング計算とは
------------

タンパク質-化合物ドッキング計算は、タンパク質の3次元構造に対して、低分子化合物がどのように結合するかを予測する計算手法です。この手法は創薬プロセスにおいて重要な役割を果たし、以下のような用途に使用されます：

* 新薬候補化合物のスクリーニング
* 既知化合物の結合様式の理解
* 化合物の構造最適化
* 薬物間相互作用の予測

.. figure:: ../images/docking_concept.png
   :alt: ドッキング計算の概念図
   :width: 600px
   
   タンパク質（青）と化合物（赤）のドッキング計算概念図

主要機能
------

docking_automationが提供する主要機能は以下の通りです：

**分子準備機能**
  * 化合物とタンパク質の読み込みと検証
  * 構造の前処理と修正
  * ドッキング用フォーマットへの変換

**ドッキング実行機能**
  * 複数ドッキングツールの統一インターフェース
  * 計算パラメータの最適化
  * 実行監視と制御

**ジョブ管理機能**
  * ジョブの分散実行
  * 負荷分散とリソース割当
  * 実行状況のモニタリング

**結果管理機能**
  * 結果の標準化された保存
  * スコアリングと評価
  * 結果の可視化と分析

**データ管理機能**
  * 複数形式での永続化
  * 効率的なデータ検索
  * データのインポート/エクスポート

対応ドッキングツール
--------------

docking_automationは、以下のドッキングツールとの連携をサポートしています：

* **AutoDock Vina** - 高速で精度の高いオープンソースのドッキングツール
* **gnina** - 機械学習を活用したドッキングと評価ツール
* **diffdock** - 拡散モデルを用いた最新のドッキングツール
* **REstretto** - レセプターアンサンブルを用いたドッキング手法

技術スタック
---------

docking_automationは以下の技術を活用しています：

* **Python 3.8+** - 主要プログラミング言語
* **RDKit/OpenBabel** - 分子操作とファイル変換
* **NumPy/Pandas** - 数値計算とデータ処理
* **SQLAlchemy** - データベース抽象化
* **Dask/Ray** - 分散計算フレームワーク

開発者向け情報は :doc:`../dev/contributing` を参照してください。